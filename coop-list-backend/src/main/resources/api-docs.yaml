openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /{userId}/lists:
    get:
      tags:
        - item-list-controller
      operationId: getAllLists
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemList'
    post:
      tags:
        - item-list-controller
      operationId: addList
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ItemListDto'
  /{userId}/lists/{listId}/checkListItem:
    post:
      tags:
        - item-list-controller
      operationId: checkListItem
      parameters:
        - name: listId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListItemDto'
  /{userId}/lists/{listId}/addUser:
    post:
      tags:
        - item-list-controller
      operationId: addUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: listId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: newUserId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ItemListDto'
  /{userId}/lists/{listId}/addListItem:
    post:
      tags:
        - item-list-controller
      operationId: addListItem
      parameters:
        - name: listId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListItemDto'
  /user/register:
    post:
      tags:
        - user-controller
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
  /{userId}/lists/{listId}:
    get:
      tags:
        - item-list-controller
      operationId: getList
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: listId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ItemList'
    delete:
      tags:
        - item-list-controller
      operationId: deleteList
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: listId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  /user/{userId}:
    get:
      tags:
        - user-controller
      operationId: getUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
    delete:
      tags:
        - user-controller
      operationId: deleteUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
components:
  schemas:
    ItemListDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    ListItemDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
    UserDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        userName:
          type: string
        email:
          type: string
        password:
          type: string
        isAdmin:
          type: boolean
    Item:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        listItems:
          type: array
          items:
            $ref: '#/components/schemas/ListItem'
    ItemList:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        listItems:
          type: array
          items:
            $ref: '#/components/schemas/ListItem'
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
    ListItem:
      required:
        - item
        - itemList
      type: object
      properties:
        id:
          type: integer
          format: int64
        item:
          $ref: '#/components/schemas/Item'
        itemList:
          $ref: '#/components/schemas/ItemList'
        timeAdded:
          type: string
          format: date-time
        timeChecked:
          type: string
          format: date-time
        checked:
          type: boolean
    User:
      required:
        - email
        - firstName
        - lastName
        - password
        - userName
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        userName:
          type: string
        email:
          type: string
        password:
          type: string
        isAdmin:
          type: boolean
        itemLists:
          type: array
          items:
            $ref: '#/components/schemas/ItemList'
